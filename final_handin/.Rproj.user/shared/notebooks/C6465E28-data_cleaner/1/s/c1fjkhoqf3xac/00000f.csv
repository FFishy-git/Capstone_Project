"0","# Load necessary libraries"
"0","library(readr)"
"0","library(dplyr)"
"0","library(writexl)"
"0","library(caret)"
"0",""
"0","# load the data"
"0","data <- read_csv(""data/cleaned/IPEDS_with_scores.csv"", show_col_types = FALSE)"
"0","data_not_missing <- read_csv(""data/cleaned/IPEDS_for_regression.csv"", show_col_types = FALSE)"
"0",""
"0","# The columns we want to fill is "
"0","score_name_list <- c("
"0","    'SAT Critical Reading 25th percentile score', "
"0","    'SAT Math 25th percentile score', "
"0","    'SAT Writing 25th percentile score', "
"0","    'SAT Critical Reading 75th percentile score', "
"0","    'SAT Math 75th percentile score', "
"0","    'SAT Writing 75th percentile score', "
"0","    'ACT Composite 25th percentile score', "
"0","    'ACT Composite 75th percentile score')"
"0",""
"0","# in these columns, there are 2^8 = 256 possible combinations of missiness. We loop over all possile combinations of missingness, and for each missingness pattern, we run linear regression on the non-missing rows to predict the missing ones. "
"0",""
"0","# We use the following function to get the missingness pattern, where 0 means not missing and 1 means missing. We loop over all 0-255 numbers and convert them to binary numbers."
"0",""
"0","for(i in 1:255) {"
"0","    missingness_pattern <- as.integer(intToBits(i)[1:8])"
"0","    data_missing <- data"
"0","    missing_columns <- c()"
"0","    nonmissing_columns <- c()"
"0","    for(j in 1:8) {"
"0","        if(missingness_pattern[j] == 1) {"
"0","        data_missing <- data_missing[is.na(data_missing[[score_name_list[j]]]),]"
"0","        missing_columns <- c(missing_columns, score_name_list[j])"
"0","        } else {"
"0","        data_missing <- data_missing[!is.na(data_missing[[score_name_list[j]]]),]"
"0","        nonmissing_columns <- c(nonmissing_columns, score_name_list[j])"
"0","        }"
"0","    }"
"0","    # if there is no missingness, we skip"
"0","    if(nrow(data_missing) == 0) next"
"0","    # if there is missingness, we run linear regression on the non-missing rows to predict the missing ones"
"0","    X <- data_not_missing[, nonmissing_columns]"
"0","    y <- data_not_missing[, missing_columns]"
"0","    # create an empty dataframe y_pred to store the predicted values"
"0","    y_pred <- data.frame(matrix(ncol = length(missing_columns), nrow = nrow(data_missing)))"
"0","    for (column in colnames(y)) {"
"0","        reg <- train(X, y[[column]], method = ""lm"")"
"0","        y_pred[, column] <- predict(reg, newdata = data_missing[, nonmissing_columns])"
"0","    }"
"0","    # store the predicted values into the original data"
"0","    data_missing[, missing_columns] <- y_pred"
"0","}"
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"2","Warning: Setting row names on a tibble is deprecated."
"1","[1m[33mError[39m in `[<-`:[22m
[33m![39m Can't recycle input of size 4 to size 2.
Backtrace:
[90m 1. [39m[1mbase[22m::`[<-`(`*tmp*`, , missing_columns, value = `<df[,4]>`)
[90m 2. [39m[1m[94mtibble:::`[<-.tbl_df`([39m[22m`*tmp*`, , missing_columns, value = `<df[,4]>`[1m[94m)[39m[22m
"
